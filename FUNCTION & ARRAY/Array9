/*Given an array A[] of size N and an integer K. Your task is to complete the function countDistinct() which prints the count of distinct numbers in all windows of size k in the array A[].

Input:
The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case contains two integers N and K. Then in the next line are N space separated values of the array A[].

Output:
For each test case in a new line print the space separated values denoting counts of distinct numbers in all windows of size k in the array A[].

Constraints:
1 <= T <= 100
1 <= N <= K <= 105
1 <= A[i] <= 105 , for each valid i

Example(To be used only for expected output):
Input:
2
7 4
1 2 1 3 4 2 3
3 2
4 1 1

Output:
3 4 4 3
2 1*/
import java.util.*;
class Main{
    public static void main(String args[]){
    int A[]={17,2,69,68,30,83,31,63,24,68,36,30,3,23,59,70,68,94,57};
    GFG g=new GFG();
    g.countDistinct(A,2,17);
    }
}
class GFG {
    void countDistinct(int A[], int k, int n) {
      
      for(int i=0;i<n;i++){
          int flag=0;
          int res[]=new int[n];
          int left=i;
          int right=k+i;
          if(right>n)
          return;
          for(left=i;left<right;left++){
              Arrays.sort(res);
              int temp=A[left];
              if(Arrays.binarySearch(res,temp)<0)
              {
                  res[flag++]=A[left];
              
                  
              }
          }
          System.out.print(flag+" ");
          
      }
        
    
}}
