/*Question
  1. You are given a number n, representing the number of rows.
2. You are given a number m, representing the number of columns.
3. You are given n*m numbers (1's and 0's), representing elements of 2d array a.
4. Consider this array a maze and a player enters from top-left corner in east direction.
5. The player moves in the same direction as long as he meets '0'. On seeing a 1, he takes a 90 deg right turn.
6. You are required to print the indices in (row, col) format of the point from where you exit the matrix.
 
                               
                               
                               
Input Format
A number n
A number m
e11
e12..
e21
e22..
.. n * m number of elements
Output Format
row
col (of the point of exit)
Constraints
1 <= n <= 10^2
1 <= m <= 10^2
e1, e2, .. n * m elements belongs to the set (0, 1)
Sample Input
4
4
0
0
1
0
1
0
0
0
0
0
0
0
1
0
1
0
Sample Output
1
3
*/
import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int r = sc.nextInt();
        int c = sc.nextInt();
        int[][] arr = new int[r][c];
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                arr[i][j] = sc.nextInt();
            }
        }
        exitPoint(arr);
    }

    public static void exitPoint(int[][] arr) {
        int count = 0;
        int i = 0;
        int j = 0;
        
            for (i=0,j = 0; j < arr[0].length&&i<arr.length;) {

                if (arr[i][j] == 1) {
                    count++;
                    count=count%4;
                }

                if (count == 0) {
                    j++;
                    if(j==arr[0].length){
                    System.out.println(i);
                    System.out.println(j-1);
                    return;}
                } else if (count == 1) {
                    i++;
                    if(i==arr.length){
                    System.out.println(i-1);
                    System.out.println(j);
                    return;}

                } else if (count == 2) {
                    j--;
                    if(j==-1){
                    System.out.println(i);
                    System.out.println(j+1);
                    return;}
                } else {
                    i--;
                     if(i==-1){
                    System.out.println(i+1);
                    System.out.println(j);
                    return;}
                }

            }
              
                    return;
                

    }
}
